<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.yfairy</groupId>
	<artifactId>yfairy-all</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>yfairy-all</name>
	<url>http://maven.apache.org</url>
	<modules>
		<module>yfairy-beans</module>
<!-- 		<module>yfairy-user-service</module> -->
		<module>yfairy-common-dependency</module>
<!-- 		<module>yfairy-web-www</module> -->
<!-- 		<module>yfairy-web-file</module> -->
<!-- 		<module>yfairy-timer</module> -->
		<module>yfairy-mybatis-generator</module>
		<module>yfairy-demo</module>
<!-- 		<module>yfairy-jms-provider</module> -->
<!-- 		<module>yfairy-jms-consumer</module> -->
		<module>yfairy-interface</module>
		<module>yfairy-service</module>
		<module>yfairy-web</module>
	</modules>
	<properties>
		<!-- 设置utf-8编码格式 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<build>
		<!-- Maven常用插件介绍: http://www.cnblogs.com/pixy/p/4977550.html -->
		<!-- Maven内置属性介绍:http://blog.csdn.net/wangjunjun2008/article/details/17761355 -->
		<!-- -->
		<plugins>
			<!-- 编译的时候使用JDK8和UTF8编码 ,编译插件 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- <version>3.0</version> -->
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- Maven生成可以直接运行的jar包的多种方式:http://blog.csdn.net/xiao__gui/article/details/47341385 -->
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-jar-plugin</artifactId> -->
			<!-- <version>2.6</version> -->
			<!-- <configuration> -->
			<!-- <archive> -->
			<!-- <manifest> -->
			<!-- <addClasspath>true</addClasspath> -->
			<!-- <classpathPrefix>lib/</classpathPrefix> -->
			<!-- </manifest> -->
			<!-- </archive> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
			<!-- 依赖分析,导出所有依赖到lib目录 -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/lib</outputDirectory>
					<excludeTransitive>false</excludeTransitive>  <!-- 是否排除间接依赖的包 -->
					<stripVersion>false</stripVersion>  <!-- 复制的jar文件是否去掉版本信息 -->
				</configuration>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<!-- 配置resource目录 -->
		<resources>
			<!--存在mapper.xml时通过此配置打包 -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<!-- <resource> <directory>conf</directory> <includes> <include>**/*</include> 
				</includes> 目标路径 <targetPath>${project.build.directory}/classes/conf</targetPath> 
				</resource> -->
		</resources>
	</build>
</project>