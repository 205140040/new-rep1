<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:jms="http://www.springframework.org/schema/jms"

	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/cache
     http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
     http://www.springframework.org/schema/lang
     http://www.springframework.org/schema/lang/spring-lang-2.5.xsd
     http://www.springframework.org/schema/jms
	 http://www.springframework.org/schema/jms/spring-jms.xsd">
	<!-- 支持mvc注解 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!--扫描注解组件 -->
	<!-- <context:component-scan base-package="com.yfairy"> <context:include-filter 
		type="annotation" expression="org.springframework.stereotype.Controller" 
		/> </context:component-scan> -->
	<!-- 配置读取属性文件 -->
	<context:property-placeholder
		file-encoding="UTF-8" location="classpath:*.properties" />
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 数据库基本信息配置 -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!--配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 启用事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置 mybatis SqlSessionFactoryBean 获得 sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置mybatis配置文件，也可以不设置 -->
		<property name="configLocation"
			value="classpath:com/yfairy/demo/mybatis3/mybatis-config-spring.xml"></property>
		<!-- 设置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置,当 MyBatis 映射器 XML 文件在和映射器类相同的路径下不存在,指定 扫描 *.xml配置文件 -->
		<!-- mapperLocations 属性使用一个资源位置的 list。 这个属性可以用来指定 MyBatis 的 XML 映射器文件的位置。 
			它的值可以包含 Ant 样式来加载一个目录中所有文件, 或者从基路径下 递归搜索所有路径。比如: -->
		<property name="mapperLocations"
			value="classpath*:com/yfairy/demo/mybatis3/*Mapper.xml"></property>
	</bean>

	<!-- 配置 sqlSessionTemplate ,当有dao 使用sqlSessionTemplate 配置 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- 配置MapperFactoryBean，生成mapper类的动态代理类 -->
	<bean id="blogTitleMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.yfairy.demo.mybatis3.BlogTitleMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!--配置org.mybatis.spring.mapper -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="classpath*:com.yfairy.demo.mybatis3"></property>
	</bean>

	<!-- 配置 BlogTitleDao -->
	<bean id="blogTitleDao" class="com.yfairy.demo.mybatis3.BlogTitleDao">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
		<!-- <property name="blogTitleMapper" ref="blogTitleMapper"></property> -->
	</bean>

</beans>