#log4j root logger 设置#

#配置根Logger，其语法为：
#配置等级，输出目录
#log4j.rootLogger = [ level ] , appenderName, appenderName, …
log4j.rootLogger=DEBUG,stdout

#输出信息到控制台
#2.配置日志信息输出目的地Appender，其语法为：
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
#3.配置日志信息的格式（布局），其语法为：
log4j.appender.stdout.layout =org.apache.log4j.PatternLayout
#自定义样式  
# %r 时间 0  
# %t 方法名 main  
# %p 优先级 INFO/INFO/ERROR  
# %c 所属类的全名(包括包名)  
# %l 发生的位置，在某个类的某行  
# %m 输出代码中指定的讯息，如log(message)中的message  
# %n 输出一个换行 
log4j.appender.stdout.layout.ConversionPattern=[%p : %d{yyyy-MM-dd HH:mm:ss}]  %l : %m%n 




#### 输出INFO 级别以上的日志到=E://logs/error.log ###
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.D.File = D://logs/log.log
#log4j.appender.D.Append = true
#log4j.appender.D.Threshold = INFO
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
#
#### 输出ERROR 级别以上的日志到=E://logs/error.log ###
#log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.E.File =E://logs/error.log 
#log4j.appender.E.Append = true
#log4j.appender.E.Threshold = ERROR 
#log4j.appender.E.layout = org.apache.log4j.PatternLayout
#log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]